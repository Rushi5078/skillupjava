pipeline {
    agent any

    tools {
        maven 'maven'
    }

    environment {
        IMAGE_NAME = 'rushikesh8788/skillupjava'
        CONTAINER_NAME = 'skillup-java-container'
        EXTERNAL_PORT = '8786'  // Updated to avoid 8080
        INTERNAL_PORT = '8786'  // Updated internal port to match external
        K8S_NAMESPACE = 'default'  // You can replace it with your own namespace
        K8S_DEPLOYMENT_NAME = 'skillup-java-deployment'
        IMAGE_TAG = "${env.BUILD_NUMBER}" // Tag Docker image with Jenkins build number
    }

    stages {
        stage('Clone Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Rushi5078/skillupjava.git'
            }
        }

        stage('Build Application') {
            steps {
                script {
                    sh 'mvn clean package -DskipTests'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    sh 'mvn test'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .'
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin"
                        sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Replace the image tag in your Kubernetes deployment file with the new image tag
                    sh "sed -i 's|${IMAGE_NAME}:.*|${IMAGE_NAME}:${IMAGE_TAG}|g' deployment.yaml"

                    // Apply the Kubernetes deployment
                    sh "kubectl apply -f deployment.yaml --namespace=${K8S_NAMESPACE}"

                    // Verify the deployment rollout
                    sh "kubectl rollout status deployment/${K8S_DEPLOYMENT_NAME} --namespace=${K8S_NAMESPACE}"
                }
            }
        }
    }

    post {
        always {
            // Clean up unused Docker images, containers, and volumes
            sh 'docker system prune -f --volumes'
        }
        success {
            echo 'Deployment to Kubernetes successful!'
        }
        failure {
            echo 'Deployment failed. Check the logs for details.'
        }
    }
}
